[
  # bits/ioctls.h
  { include: [ "<asm/ioctls.h>", private, "<bits/ioctls.h>", private ] },

  # errno.h
  { symbol: ["E2BIG", private, "<errno.h>", public ] },
  { symbol: ["EACCES", private, "<errno.h>", public ] },
  { symbol: ["EADDRINUSE", private, "<errno.h>", public ] },
  { symbol: ["EADDRNOTAVAIL", private, "<errno.h>", public ] },
  { symbol: ["EAFNOSUPPORT", private, "<errno.h>", public ] },
  { symbol: ["EAGAIN", private, "<errno.h>", public ] },
  { symbol: ["EALREADY", private, "<errno.h>", public ] },
  { symbol: ["EBADF", private, "<errno.h>", public ] },
  { symbol: ["EBADMSG", private, "<errno.h>", public ] },
  { symbol: ["EBUSY", private, "<errno.h>", public ] },
  { symbol: ["ECANCELED", private, "<errno.h>", public ] },
  { symbol: ["ECHILD", private, "<errno.h>", public ] },
  { symbol: ["ECONNABORTED", private, "<errno.h>", public ] },
  { symbol: ["ECONNREFUSED", private, "<errno.h>", public ] },
  { symbol: ["ECONNRESET", private, "<errno.h>", public ] },
  { symbol: ["EDEADLK", private, "<errno.h>", public ] },
  { symbol: ["EDESTADDRREQ", private, "<errno.h>", public ] },
  { symbol: ["EDOM", private, "<errno.h>", public ] },
  { symbol: ["EDQUOT", private, "<errno.h>", public ] },
  { symbol: ["EEXIST", private, "<errno.h>", public ] },
  { symbol: ["EFAULT", private, "<errno.h>", public ] },
  { symbol: ["EFBIG", private, "<errno.h>", public ] },
  { symbol: ["EHOSTUNREACH", private, "<errno.h>", public ] },
  { symbol: ["EIDRM", private, "<errno.h>", public ] },
  { symbol: ["EILSEQ", private, "<errno.h>", public ] },
  { symbol: ["EINPROGRESS", private, "<errno.h>", public ] },
  { symbol: ["EINTR", private, "<errno.h>", public ] },
  { symbol: ["EINVAL", private, "<errno.h>", public ] },
  { symbol: ["EIO", private, "<errno.h>", public ] },
  { symbol: ["EISCONN", private, "<errno.h>", public ] },
  { symbol: ["EISDIR", private, "<errno.h>", public ] },
  { symbol: ["ELOOP", private, "<errno.h>", public ] },
  { symbol: ["EMFILE", private, "<errno.h>", public ] },
  { symbol: ["EMLINK", private, "<errno.h>", public ] },
  { symbol: ["EMSGSIZE", private, "<errno.h>", public ] },
  { symbol: ["EMULTIHOP", private, "<errno.h>", public ] },
  { symbol: ["ENAMETOOLONG", private, "<errno.h>", public ] },
  { symbol: ["ENETDOWN", private, "<errno.h>", public ] },
  { symbol: ["ENETRESET", private, "<errno.h>", public ] },
  { symbol: ["ENETUNREACH", private, "<errno.h>", public ] },
  { symbol: ["ENFILE", private, "<errno.h>", public ] },
  { symbol: ["ENOBUFS", private, "<errno.h>", public ] },
  { symbol: ["ENODATA", private, "<errno.h>", public ] },
  { symbol: ["ENODEV", private, "<errno.h>", public ] },
  { symbol: ["ENOENT", private, "<errno.h>", public ] },
  { symbol: ["ENOEXEC", private, "<errno.h>", public ] },
  { symbol: ["ENOLCK", private, "<errno.h>", public ] },
  { symbol: ["ENOLINK", private, "<errno.h>", public ] },
  { symbol: ["ENOMEM", private, "<errno.h>", public ] },
  { symbol: ["ENOMSG", private, "<errno.h>", public ] },
  { symbol: ["ENOPROTOOPT", private, "<errno.h>", public ] },
  { symbol: ["ENOSPC", private, "<errno.h>", public ] },
  { symbol: ["ENOSR", private, "<errno.h>", public ] },
  { symbol: ["ENOSTR", private, "<errno.h>", public ] },
  { symbol: ["ENOSYS", private, "<errno.h>", public ] },
  { symbol: ["ENOTCONN", private, "<errno.h>", public ] },
  { symbol: ["ENOTDIR", private, "<errno.h>", public ] },
  { symbol: ["ENOTEMPTY", private, "<errno.h>", public ] },
  { symbol: ["ENOTRECOVERABLE", private, "<errno.h>", public ] },
  { symbol: ["ENOTSOCK", private, "<errno.h>", public ] },
  { symbol: ["ENOTSUP", private, "<errno.h>", public ] },
  { symbol: ["ENOTTY", private, "<errno.h>", public ] },
  { symbol: ["ENXIO", private, "<errno.h>", public ] },
  { symbol: ["EOPNOTSUPP", private, "<errno.h>", public ] },
  { symbol: ["EOVERFLOW", private, "<errno.h>", public ] },
  { symbol: ["EOWNERDEAD", private, "<errno.h>", public ] },
  { symbol: ["EPERM", private, "<errno.h>", public ] },
  { symbol: ["EPIPE", private, "<errno.h>", public ] },
  { symbol: ["EPROTO", private, "<errno.h>", public ] },
  { symbol: ["EPROTONOSUPPORT", private, "<errno.h>", public ] },
  { symbol: ["EPROTOTYPE", private, "<errno.h>", public ] },
  { symbol: ["ERANGE", private, "<errno.h>", public ] },
  { symbol: ["EROFS", private, "<errno.h>", public ] },
  { symbol: ["ESPIPE", private, "<errno.h>", public ] },
  { symbol: ["ESRCH", private, "<errno.h>", public ] },
  { symbol: ["ESTALE", private, "<errno.h>", public ] },
  { symbol: ["ETIME", private, "<errno.h>", public ] },
  { symbol: ["ETIMEDOUT", private, "<errno.h>", public ] },
  { symbol: ["ETXTBSY", private, "<errno.h>", public ] },
  { symbol: ["EWOULDBLOCK", private, "<errno.h>", public ] },
  { symbol: ["EXDEV", private, "<errno.h>", public ] },

  # fcntl.h
  { symbol: ["O_CLOEXEC", private, "<fcntl.h>", public ] },
  { symbol: ["O_CREAT", private, "<fcntl.h>", public ] },
  { symbol: ["O_DIRECTORY", private, "<fcntl.h>", public ] },
  { symbol: ["O_EXCL", private, "<fcntl.h>", public ] },
  { symbol: ["O_NOCTTY", private, "<fcntl.h>", public ] },
  { symbol: ["O_NOFOLLOW", private, "<fcntl.h>", public ] },
  { symbol: ["O_TRUNC", private, "<fcntl.h>", public ] },
  { symbol: ["O_TTY_INIT", private, "<fcntl.h>", public ] },

  { symbol: ["O_APPEND", private, "<fcntl.h>", public ] },
  { symbol: ["O_DSYNC", private, "<fcntl.h>", public ] },
  { symbol: ["O_NONBLOCK", private, "<fcntl.h>", public ] },
  { symbol: ["O_RSYNC", private, "<fcntl.h>", public ] },
  { symbol: ["O_SYNC", private, "<fcntl.h>", public ] },

  { symbol: ["O_EXEC", private, "<fcntl.h>", public ] },
  { symbol: ["O_RDONLY", private, "<fcntl.h>", public ] },
  { symbol: ["O_RDWR", private, "<fcntl.h>", public ] },
  { symbol: ["O_SEARCH", private, "<fcntl.h>", public ] },
  { symbol: ["O_WRONLY", private, "<fcntl.h>", public ] },

  # limits.h
  { symbol: ["SSIZE_MAX", private, "<limits.h>", public ] },

  # signal.h
  { symbol: [ "sigset_t", private, "<signal.h>", public ] },
  { symbol: ["SIGABRT", private, "<signal.h>", public ] },
  { symbol: ["SIGALRM", private, "<signal.h>", public ] },
  { symbol: ["SIGBUS", private, "<signal.h>", public ] },
  { symbol: ["SIGCHLD", private, "<signal.h>", public ] },
  { symbol: ["SIGCONT", private, "<signal.h>", public ] },
  { symbol: ["SIGFPE", private, "<signal.h>", public ] },
  { symbol: ["SIGHUP", private, "<signal.h>", public ] },
  { symbol: ["SIGILL", private, "<signal.h>", public ] },
  { symbol: ["SIGINT", private, "<signal.h>", public ] },
  { symbol: ["SIGKILL", private, "<signal.h>", public ] },
  { symbol: ["SIGPIPE", private, "<signal.h>", public ] },
  { symbol: ["SIGQUIT", private, "<signal.h>", public ] },
  { symbol: ["SIGSEGV", private, "<signal.h>", public ] },
  { symbol: ["SIGSTOP", private, "<signal.h>", public ] },
  { symbol: ["SIGTERM", private, "<signal.h>", public ] },
  { symbol: ["SIGTSTP", private, "<signal.h>", public ] },
  { symbol: ["SIGTTIN", private, "<signal.h>", public ] },
  { symbol: ["SIGTTOU", private, "<signal.h>", public ] },
  { symbol: ["SIGUSR1", private, "<signal.h>", public ] },
  { symbol: ["SIGUSR2", private, "<signal.h>", public ] },
  { symbol: ["SIGTRAP", private, "<signal.h>", public ] },
  { symbol: ["SIGURG", private, "<signal.h>", public ] },
  { symbol: ["SIGXCPU", private, "<signal.h>", public ] },
  { symbol: ["SIGXFSZ", private, "<signal.h>", public ] },

  # sys/socket.h
  { symbol: [ "iovec", private, "<sys/socket.h>", public ] },
  { symbol: ["SOCK_STREAM", private, "<sys/socket.h>", public ] },

  # sys/types.h
  { symbol: [ "ssize_t", private, "<sys/types.h>", public ] },
  { symbol: ["mode_t", private, "<sys/types.h>", public ] },

  # termios.h
  { include: [ "<bits/termios-c_lflag.h>", private, "<termios.h>", public ] },
  { include: [ "<bits/termios-struct.h>", private, "<termios.h>", public ] },
  { include: [ '<bits/termios-c_cc.h>', private, '<termios.h>', public ] },
  { include: [ '<bits/termios-c_cflag.h>', private, '<termios.h>', public ] },
  { include: [ '<bits/termios-c_iflag.h>', private, '<termios.h>', public ] },
  { include: [ '<bits/termios-c_oflag.h>', private, '<termios.h>', public ] },

  # <unistd.h
  { symbol: ["_POSIX_VDISABLE", private, "<unistd.h>", public ] },
]

# vim: set ft=toml:
