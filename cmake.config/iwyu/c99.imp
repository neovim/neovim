# Symbols defined in the C spec.
# These are taken from https://port70.net/~nsz/c/c99/n1256.html#B

[
  #B.3 Character handling <ctype.h>
  { symbol: ["isalnum", private, "<ctype.h>", public ] },
  { symbol: ["isalpha", private, "<ctype.h>", public ] },
  { symbol: ["isblank", private, "<ctype.h>", public ] },
  { symbol: ["iscntrl", private, "<ctype.h>", public ] },
  { symbol: ["isdigit", private, "<ctype.h>", public ] },
  { symbol: ["isgraph", private, "<ctype.h>", public ] },
  { symbol: ["islower", private, "<ctype.h>", public ] },
  { symbol: ["isprint", private, "<ctype.h>", public ] },
  { symbol: ["ispunct", private, "<ctype.h>", public ] },
  { symbol: ["isspace", private, "<ctype.h>", public ] },
  { symbol: ["isupper", private, "<ctype.h>", public ] },
  { symbol: ["isxdigi", private, "<ctype.h>", public ] },
  { symbol: ["tolower", private, "<ctype.h>", public ] },
  { symbol: ["toupper", private, "<ctype.h>", public ] },

  # B.4 Errors <errno.h>
  { symbol: ["EDOM", private, "<errno.h>", public ] },
  { symbol: ["EILSEQ", private, "<errno.h>", public ] },
  { symbol: ["ERANGE", private, "<errno.h>", public ] },
  { symbol: ["errno", private, "<errno.h>", public ] },

  # B.10 Localization <locale.h>
  { symbol: ["lconv", private, "<locale.h>", public ] },
  { symbol: ["NULL", private, "<locale.h>", public ] },
  { symbol: ["LC_ALL", private, "<locale.h>", public ] },
  { symbol: ["LC_COLLATE", private, "<locale.h>", public ] },
  { symbol: ["LC_CTYPE", private, "<locale.h>", public ] },
  { symbol: ["LC_MONETARY", private, "<locale.h>", public ] },
  { symbol: ["LC_NUMERIC", private, "<locale.h>", public ] },
  { symbol: ["LC_TIME", private, "<locale.h>", public ] },
  { symbol: ["setlocale", private, "<locale.h>", public ] },
  { symbol: ["localeconv", private, "<locale.h>", public ] },

  # B.14 Variable arguments <stdarg.h>
  { symbol: ["va_list", private, "<stdarg.h>", public ] },
  { symbol: ["va_arg", private, "<stdarg.h>", public ] },
  { symbol: ["va_copy", private, "<stdarg.h>", public ] },
  { symbol: ["va_end", private, "<stdarg.h>", public ] },
  { symbol: ["va_start", private, "<stdarg.h>", public ] },

  # B.16 Common definitions <stddef.h>
  { symbol: ["ptrdiff_t", private, "<stddef.h>", public ] },
  { symbol: ["size_t", private, "<stddef.h>", public ] },
  { symbol: ["wchar_t", private, "<stddef.h>", public ] },
  { symbol: ["NULL", private, "<stddef.h>", public ] },
  { symbol: ["offsetof", private, "<stddef.h>", public ] },

  # B.17 Integer types <stdint.h>
  { symbol: ["int8_t", private, "<stdint.h>", public ] },
  { symbol: ["uint8_t", private, "<stdint.h>", public ] },
  { symbol: ["int_least8_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_least8_t", private, "<stdint.h>", public ] },
  { symbol: ["int_fast8_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_fast8_t", private, "<stdint.h>", public ] },
  { symbol: ["INT8_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT8_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT8_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST8_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST8_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_LEAST8_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST8_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST8_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_FAST8_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT8_C", private, "<stdint.h>", public ] },
  { symbol: ["UINT8_C", private, "<stdint.h>", public ] },
  { symbol: ["int16_t", private, "<stdint.h>", public ] },
  { symbol: ["uint16_t", private, "<stdint.h>", public ] },
  { symbol: ["int_least16_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_least16_t", private, "<stdint.h>", public ] },
  { symbol: ["int_fast16_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_fast16_t", private, "<stdint.h>", public ] },
  { symbol: ["INT16_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT16_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT16_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST16_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST16_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_LEAST16_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST16_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST16_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_FAST16_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT16_C", private, "<stdint.h>", public ] },
  { symbol: ["UINT16_C", private, "<stdint.h>", public ] },
  { symbol: ["int32_t", private, "<stdint.h>", public ] },
  { symbol: ["uint32_t", private, "<stdint.h>", public ] },
  { symbol: ["int_least32_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_least32_t", private, "<stdint.h>", public ] },
  { symbol: ["int_fast32_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_fast32_t", private, "<stdint.h>", public ] },
  { symbol: ["INT32_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT32_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT32_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST32_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST32_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_LEAST32_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST32_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST32_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_FAST32_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT32_C", private, "<stdint.h>", public ] },
  { symbol: ["UINT32_C", private, "<stdint.h>", public ] },
  { symbol: ["int64_t", private, "<stdint.h>", public ] },
  { symbol: ["uint64_t", private, "<stdint.h>", public ] },
  { symbol: ["int_least64_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_least64_t", private, "<stdint.h>", public ] },
  { symbol: ["int_fast64_t", private, "<stdint.h>", public ] },
  { symbol: ["uint_fast64_t", private, "<stdint.h>", public ] },
  { symbol: ["INT64_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT64_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT64_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST64_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_LEAST64_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_LEAST64_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST64_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INT_FAST64_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINT_FAST64_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INT64_C", private, "<stdint.h>", public ] },
  { symbol: ["UINT64_C", private, "<stdint.h>", public ] },
  { symbol: ["intptr_t", private, "<stdint.h>", public ] },
  { symbol: ["uintptr_t", private, "<stdint.h>", public ] },
  { symbol: ["intmax_t", private, "<stdint.h>", public ] },
  { symbol: ["uintmax_t", private, "<stdint.h>", public ] },
  { symbol: ["INTPTR_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INTPTR_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINTPTR_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INTMAX_MIN", private, "<stdint.h>", public ] },
  { symbol: ["INTMAX_MAX", private, "<stdint.h>", public ] },
  { symbol: ["UINTMAX_MAX", private, "<stdint.h>", public ] },
  { symbol: ["PTRDIFF_MIN", private, "<stdint.h>", public ] },
  { symbol: ["PTRDIFF_MAX", private, "<stdint.h>", public ] },
  { symbol: ["SIG_ATOMIC_MIN", private, "<stdint.h>", public ] },
  { symbol: ["SIG_ATOMIC_MAX", private, "<stdint.h>", public ] },
  { symbol: ["SIZE_MAX", private, "<stdint.h>", public ] },
  { symbol: ["WCHAR_MIN", private, "<stdint.h>", public ] },
  { symbol: ["WCHAR_MAX", private, "<stdint.h>", public ] },
  { symbol: ["WINT_MIN", private, "<stdint.h>", public ] },
  { symbol: ["WINT_MAX", private, "<stdint.h>", public ] },
  { symbol: ["INTMAX_C", private, "<stdint.h>", public ] },
  { symbol: ["UINTMAX_C", private, "<stdint.h>", public ] },

  # B.18 Input/output <stdio.h>
  { symbol: ["size_t", private, "<stdio.h>", public ] },
  { symbol: ["FILE", private, "<stdio.h>", public ] },
  { symbol: ["fpos_t", private, "<stdio.h>", public ] },
  { symbol: ["NULL", private, "<stdio.h>", public ] },
  { symbol: ["_IOFBF", private, "<stdio.h>", public ] },
  { symbol: ["_IOLBF", private, "<stdio.h>", public ] },
  { symbol: ["_IONBF", private, "<stdio.h>", public ] },
  { symbol: ["BUFSIZ", private, "<stdio.h>", public ] },
  { symbol: ["EOF", private, "<stdio.h>", public ] },
  { symbol: ["FOPEN_MAX", private, "<stdio.h>", public ] },
  { symbol: ["FILENAME_MAX", private, "<stdio.h>", public ] },
  { symbol: ["L_tmpnam", private, "<stdio.h>", public ] },
  { symbol: ["SEEK_CUR", private, "<stdio.h>", public ] },
  { symbol: ["SEEK_END", private, "<stdio.h>", public ] },
  { symbol: ["SEEK_SET", private, "<stdio.h>", public ] },
  { symbol: ["TMP_MAX", private, "<stdio.h>", public ] },
  { symbol: ["stderr", private, "<stdio.h>", public ] },
  { symbol: ["stdin", private, "<stdio.h>", public ] },
  { symbol: ["stdout", private, "<stdio.h>", public ] },
  { symbol: ["remove", private, "<stdio.h>", public ] },
  { symbol: ["rename", private, "<stdio.h>", public ] },
  { symbol: ["tmpfile", private, "<stdio.h>", public ] },
  { symbol: ["tmpnam", private, "<stdio.h>", public ] },
  { symbol: ["fclose", private, "<stdio.h>", public ] },
  { symbol: ["fflush", private, "<stdio.h>", public ] },
  { symbol: ["fopen", private, "<stdio.h>", public ] },
  { symbol: ["freopen", private, "<stdio.h>", public ] },
  { symbol: ["setbuf", private, "<stdio.h>", public ] },
  { symbol: ["setvbuf", private, "<stdio.h>", public ] },
  { symbol: ["fprintf", private, "<stdio.h>", public ] },
  { symbol: ["fscanf", private, "<stdio.h>", public ] },
  { symbol: ["printf", private, "<stdio.h>", public ] },
  { symbol: ["scanf", private, "<stdio.h>", public ] },
  { symbol: ["snprintf", private, "<stdio.h>", public ] },
  { symbol: ["sprintf", private, "<stdio.h>", public ] },
  { symbol: ["sscanf", private, "<stdio.h>", public ] },
  { symbol: ["vfprintf", private, "<stdio.h>", public ] },
  { symbol: ["vfscanf", private, "<stdio.h>", public ] },
  { symbol: ["vprintf", private, "<stdio.h>", public ] },
  { symbol: ["vscanf", private, "<stdio.h>", public ] },
  { symbol: ["vsnprintf", private, "<stdio.h>", public ] },
  { symbol: ["vsprintf", private, "<stdio.h>", public ] },
  { symbol: ["vsscanf", private, "<stdio.h>", public ] },
  { symbol: ["fgetc", private, "<stdio.h>", public ] },
  { symbol: ["fgets", private, "<stdio.h>", public ] },
  { symbol: ["fputc", private, "<stdio.h>", public ] },
  { symbol: ["fputs", private, "<stdio.h>", public ] },
  { symbol: ["getc", private, "<stdio.h>", public ] },
  { symbol: ["getchar", private, "<stdio.h>", public ] },
  { symbol: ["gets", private, "<stdio.h>", public ] },
  { symbol: ["putc", private, "<stdio.h>", public ] },
  { symbol: ["putchar", private, "<stdio.h>", public ] },
  { symbol: ["puts", private, "<stdio.h>", public ] },
  { symbol: ["ungetc", private, "<stdio.h>", public ] },
  { symbol: ["fread", private, "<stdio.h>", public ] },
  { symbol: ["fwrite", private, "<stdio.h>", public ] },
  { symbol: ["fgetpos", private, "<stdio.h>", public ] },
  { symbol: ["fseek", private, "<stdio.h>", public ] },
  { symbol: ["fsetpos", private, "<stdio.h>", public ] },
  { symbol: ["ftell", private, "<stdio.h>", public ] },
  { symbol: ["rewind", private, "<stdio.h>", public ] },
  { symbol: ["clearerr", private, "<stdio.h>", public ] },
  { symbol: ["feof", private, "<stdio.h>", public ] },
  { symbol: ["ferror", private, "<stdio.h>", public ] },
  { symbol: ["perror", private, "<stdio.h>", public ] },

  # B.19 General utilities <stdlib.h>
  { symbol: ["size_t", private, "<stdlib.h>", public ] },
  { symbol: ["wchar_t", private, "<stdlib.h>", public ] },
  { symbol: ["div_t", private, "<stdlib.h>", public ] },
  { symbol: ["ldiv_t", private, "<stdlib.h>", public ] },
  { symbol: ["lldiv_t", private, "<stdlib.h>", public ] },
  { symbol: ["NULL", private, "<stdlib.h>", public ] },
  { symbol: ["EXIT_FAILURE", private, "<stdlib.h>", public ] },
  { symbol: ["EXIT_SUCCESS", private, "<stdlib.h>", public ] },
  { symbol: ["RAND_MAX", private, "<stdlib.h>", public ] },
  { symbol: ["MB_CUR_MAX", private, "<stdlib.h>", public ] },
  { symbol: ["atof", private, "<stdlib.h>", public ] },
  { symbol: ["atoi", private, "<stdlib.h>", public ] },
  { symbol: ["atol", private, "<stdlib.h>", public ] },
  { symbol: ["atoll", private, "<stdlib.h>", public ] },
  { symbol: ["strtod", private, "<stdlib.h>", public ] },
  { symbol: ["strtof", private, "<stdlib.h>", public ] },
  { symbol: ["strtold", private, "<stdlib.h>", public ] },
  { symbol: ["strtol", private, "<stdlib.h>", public ] },
  { symbol: ["strtoll", private, "<stdlib.h>", public ] },
  { symbol: ["strtoul", private, "<stdlib.h>", public ] },
  { symbol: ["strtoull", private, "<stdlib.h>", public ] },
  { symbol: ["rand", private, "<stdlib.h>", public ] },
  { symbol: ["srand", private, "<stdlib.h>", public ] },
  { symbol: ["calloc", private, "<stdlib.h>", public ] },
  { symbol: ["free", private, "<stdlib.h>", public ] },
  { symbol: ["malloc", private, "<stdlib.h>", public ] },
  { symbol: ["realloc", private, "<stdlib.h>", public ] },
  { symbol: ["abort", private, "<stdlib.h>", public ] },
  { symbol: ["atexit", private, "<stdlib.h>", public ] },
  { symbol: ["exit", private, "<stdlib.h>", public ] },
  { symbol: ["_Exit", private, "<stdlib.h>", public ] },
  { symbol: ["getenv", private, "<stdlib.h>", public ] },
  { symbol: ["system", private, "<stdlib.h>", public ] },
  { symbol: ["bsearch", private, "<stdlib.h>", public ] },
  { symbol: ["qsort", private, "<stdlib.h>", public ] },
  { symbol: ["abs", private, "<stdlib.h>", public ] },
  { symbol: ["labs", private, "<stdlib.h>", public ] },
  { symbol: ["llabs", private, "<stdlib.h>", public ] },
  { symbol: ["div", private, "<stdlib.h>", public ] },
  { symbol: ["ldiv", private, "<stdlib.h>", public ] },
  { symbol: ["lldiv", private, "<stdlib.h>", public ] },
  { symbol: ["mblen", private, "<stdlib.h>", public ] },
  { symbol: ["mbtowc", private, "<stdlib.h>", public ] },
  { symbol: ["wctomb", private, "<stdlib.h>", public ] },
  { symbol: ["mbstowcs", private, "<stdlib.h>", public ] },
  { symbol: ["wcstombs", private, "<stdlib.h>", public ] },

  # B.20 String handling <string.h>
  { symbol: ["size_t", private, "<string.h>", public ] },
  { symbol: ["NULL", private, "<string.h>", public ] },
  { symbol: ["memcpy", private, "<string.h>", public ] },
  { symbol: ["memmove", private, "<string.h>", public ] },
  { symbol: ["strcpy", private, "<string.h>", public ] },
  { symbol: ["strncpy", private, "<string.h>", public ] },
  { symbol: ["strcat", private, "<string.h>", public ] },
  { symbol: ["strncat", private, "<string.h>", public ] },
  { symbol: ["memcmp", private, "<string.h>", public ] },
  { symbol: ["strcmp", private, "<string.h>", public ] },
  { symbol: ["strcoll", private, "<string.h>", public ] },
  { symbol: ["strncmp", private, "<string.h>", public ] },
  { symbol: ["strxfrm", private, "<string.h>", public ] },
  { symbol: ["memchr", private, "<string.h>", public ] },
  { symbol: ["strchr", private, "<string.h>", public ] },
  { symbol: ["strcspn", private, "<string.h>", public ] },
  { symbol: ["strpbrk", private, "<string.h>", public ] },
  { symbol: ["strrchr", private, "<string.h>", public ] },
  { symbol: ["strspn", private, "<string.h>", public ] },
  { symbol: ["strstr", private, "<string.h>", public ] },
  { symbol: ["strtok", private, "<string.h>", public ] },
  { symbol: ["memset", private, "<string.h>", public ] },
  { symbol: ["strerror", private, "<string.h>", public ] },
  { symbol: ["strlen", private, "<string.h>", public ] },

  # B.22 Date and time <time.h>
  { symbol: ["NULL", private, "<time.h>", public ] },
  { symbol: ["CLOCKS_PER_SEC", private, "<time.h>", public ] },
  { symbol: ["size_t", private, "<time.h>", public ] },
  { symbol: ["clock_t", private, "<time.h>", public ] },
  { symbol: ["time_t", private, "<time.h>", public ] },
  { symbol: ["tm", private, "<time.h>", public ] },
  { symbol: ["clock", private, "<time.h>", public ] },
  { symbol: ["difftime", private, "<time.h>", public ] },
  { symbol: ["mktime", private, "<time.h>", public ] },
  { symbol: ["time", private, "<time.h>", public ] },
  { symbol: ["asctime", private, "<time.h>", public ] },
  { symbol: ["ctime", private, "<time.h>", public ] },
  { symbol: ["gmtime", private, "<time.h>", public ] },
  { symbol: ["localtime", private, "<time.h>", public ] },
  { symbol: ["strftime", private, "<time.h>", public ] },

  # B.23 Extended multibyte/wide character utilities <wchar.h>
  { symbol: ["wchar_t", private, "<wchar.h>", public ] },
  { symbol: ["wint_t", private, "<wchar.h>", public ] },
  { symbol: ["WCHAR_MAX", private, "<wchar.h>", public ] },
  { symbol: ["size_t", private, "<wchar.h>", public ] },
  { symbol: ["tm", private, "<wchar.h>", public ] },
  { symbol: ["WCHAR_MIN", private, "<wchar.h>", public ] },
  { symbol: ["mbstate_t", private, "<wchar.h>", public ] },
  { symbol: ["NULL", private, "<wchar.h>", public ] },
  { symbol: ["WEOF", private, "<wchar.h>", public ] },
  { symbol: ["fwprintf", private, "<wchar.h>", public ] },
  { symbol: ["fwscanf", private, "<wchar.h>", public ] },
  { symbol: ["swprintf", private, "<wchar.h>", public ] },
  { symbol: ["swscanf", private, "<wchar.h>", public ] },
  { symbol: ["vfwprintf", private, "<wchar.h>", public ] },
  { symbol: ["vfwscanf", private, "<wchar.h>", public ] },
  { symbol: ["vswprintf", private, "<wchar.h>", public ] },
  { symbol: ["vswscanf", private, "<wchar.h>", public ] },
  { symbol: ["vwprintf", private, "<wchar.h>", public ] },
  { symbol: ["vwscanf", private, "<wchar.h>", public ] },
  { symbol: ["wprintf", private, "<wchar.h>", public ] },
  { symbol: ["wscanf", private, "<wchar.h>", public ] },
  { symbol: ["fgetwc", private, "<wchar.h>", public ] },
  { symbol: ["fgetws", private, "<wchar.h>", public ] },
  { symbol: ["fputwc", private, "<wchar.h>", public ] },
  { symbol: ["fputws", private, "<wchar.h>", public ] },
  { symbol: ["fwide", private, "<wchar.h>", public ] },
  { symbol: ["getwc", private, "<wchar.h>", public ] },
  { symbol: ["getwchar", private, "<wchar.h>", public ] },
  { symbol: ["putwc", private, "<wchar.h>", public ] },
  { symbol: ["putwchar", private, "<wchar.h>", public ] },
  { symbol: ["ungetwc", private, "<wchar.h>", public ] },
  { symbol: ["wcstod", private, "<wchar.h>", public ] },
  { symbol: ["wcstof", private, "<wchar.h>", public ] },
  { symbol: ["wcstold", private, "<wchar.h>", public ] },
  { symbol: ["wcstol", private, "<wchar.h>", public ] },
  { symbol: ["wcstoll", private, "<wchar.h>", public ] },
  { symbol: ["wcstoul", private, "<wchar.h>", public ] },
  { symbol: ["wcstoull", private, "<wchar.h>", public ] },
  { symbol: ["wcscpy", private, "<wchar.h>", public ] },
  { symbol: ["wcsncpy", private, "<wchar.h>", public ] },
  { symbol: ["wmemcpy", private, "<wchar.h>", public ] },
  { symbol: ["wmemmove", private, "<wchar.h>", public ] },
  { symbol: ["wcscat", private, "<wchar.h>", public ] },
  { symbol: ["wcsncat", private, "<wchar.h>", public ] },
  { symbol: ["wcscmp", private, "<wchar.h>", public ] },
  { symbol: ["wcscoll", private, "<wchar.h>", public ] },
  { symbol: ["wcsncmp", private, "<wchar.h>", public ] },
  { symbol: ["wcsxfrm", private, "<wchar.h>", public ] },
  { symbol: ["wmemcmp", private, "<wchar.h>", public ] },
  { symbol: ["wcschr", private, "<wchar.h>", public ] },
  { symbol: ["wcscspn", private, "<wchar.h>", public ] },
  { symbol: ["wcspbrk", private, "<wchar.h>", public ] },
  { symbol: ["wcsrchr", private, "<wchar.h>", public ] },
  { symbol: ["wcsspn", private, "<wchar.h>", public ] },
  { symbol: ["wcsstr", private, "<wchar.h>", public ] },
  { symbol: ["wcstok", private, "<wchar.h>", public ] },
  { symbol: ["wmemchr", private, "<wchar.h>", public ] },
  { symbol: ["wcslen", private, "<wchar.h>", public ] },
  { symbol: ["wmemset", private, "<wchar.h>", public ] },
  { symbol: ["wcsftime", private, "<wchar.h>", public ] },
  { symbol: ["btowc", private, "<wchar.h>", public ] },
  { symbol: ["wctob", private, "<wchar.h>", public ] },
  { symbol: ["mbsinit", private, "<wchar.h>", public ] },
  { symbol: ["mbrlen", private, "<wchar.h>", public ] },
  { symbol: ["mbrtowc", private, "<wchar.h>", public ] },
  { symbol: ["wcrtomb", private, "<wchar.h>", public ] },
  { symbol: ["mbsrtowcs", private, "<wchar.h>", public ] },
  { symbol: ["wcsrtombs", private, "<wchar.h>", public ] },

  # inttypes.h includes stdint.h
  # https://port70.net/~nsz/c/c99/n1256.html#7.8p1
  { include: [ "<stdint.h>", public, "<inttypes.h>", public ] },
]

# vim: set ft=toml:
