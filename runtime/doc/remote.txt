*remote.txt*    Nvim


		  VIM REFERENCE MANUAL    by Bram Moolenaar


Vim client-server communication				*client-server*

                                      Type |gO| to see the table of contents.

==============================================================================
1. Common functionality					*clientserver*

Nvim's |RPC| functionality allows clients to programmatically control Nvim. Nvim
itself takes command-line arguments that cause it to become a client to another
Nvim running as a server. These arguments match those provided by Vim's
clientserver option.

The following command line arguments are available:

    argument			meaning	~

   --remote [+{cmd}] {file} ...					*--remote*
				Open the file list in a remote Vim.  When
				there is no Vim server, execute locally.
				Vim allows one init command: +{cmd}.
				This must be an Ex command that can be
				followed by "|". It's not yet supported by
				Nvim.
				The rest of the command line is taken as the
				file list.  Thus any non-file arguments must
				come before this.
				You cannot edit stdin this way |--|.
				The remote Vim is raised.  If you don't want
				this use >
				 nvim --remote-send "<C-\><C-N>:n filename<CR>"
<
								*--server*
   --server {addr}		Connect to the named pipe or socket at the
				given address for executing remote commands.
				See |--listen| for specifying an address when
				starting a server.

Examples ~

Start an Nvim server listening on a named pipe at '~/.cache/nvim/server.pipe': >
    nvim --listen ~/.cache/nvim/server.pipe

Edit "file.txt" in an Nvim server listening at '~/.cache/nvim/server.pipe': >
    nvim --server ~/.cache/nvim/server.pipe --remote file.txt

This doesn't work, all arguments after --remote will be used as file names: >
    nvim --remote --server ~/.cache/nvim/server.pipe file.txt

Tell the remote server to write all files and exit: >
    nvim --server ~/.cache/nvim/server.pipe --remote-send '<C-\><C-N>:wqa<CR>'


REMOTE EDITING

The --remote argument will cause a |:drop| command to be constructed from the
rest of the command line and sent as described above.
Note that the --remote and --remote-wait arguments will consume the rest of
the command line.  I.e. all remaining arguments will be regarded as filenames.
You can not put options there!


SERVER NAME						*client-server-name*

By default Vim will try to register the name under which it was invoked (gvim,
egvim ...).  This can be overridden with the --servername argument.  Nvim
either listens on a named pipe or a socket and does not yet support this
--servername functionality.

 vim:tw=78:sw=4:ts=8:noet:ft=help:norl:
