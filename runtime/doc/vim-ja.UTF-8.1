.TH VIM 1 "2006 Apr 11"
.SH 名前
vim \- Vi IMproved, プログラマのテキストエディタ
.SH 書式
.br
.B vim
[options] [file ..]
.br
.B vim
[options] \-
.br
.B vim
[options] \-t tag
.br
.B vim
[options] \-q [errorfile]
.PP
.br
.B ex
.br
.B view
.br
.B gvim
.B gview
.B evim
.B eview
.br
.B rvim
.B rview
.B rgvim
.B rgview
.SH 説明
.B Vim
は Vi 互換のテキストエディタです。
どのような種類のプレインテキストでも編集できます。
特に、プログラムの編集に力を発揮します。
.PP
Vi に多くの改良が加えられています:
多段アンドゥ、マルチウィンドウ、マルチバッファ、構文強調表示、
コマンドライン編集、ファイル名補完、ヘルプ、ビジュアル選択、などなど。
.B Vim
と Vi の違いについての要約は ":help vi_diff.txt" を参照してください。
.PP
.B Vim
の実行中は ":help" コマンドでヘルプを引くことができます。
下記、オンラインヘルプの項を参照してください。
.PP
.B Vim
は次のようなコマンドで起動できます。
.PP
	vim file
.PP
正確な書式は次の通りです:
.PP
	vim [options] [filelist]
.PP
filelist を省略した場合は、空のバッファが開かれます。
指定した場合は、以下の四つのうちどれか一つの方法でファイルが開かれます。
.TP 12
file ..
ファイルのリスト。
一番目のファイルがカレントファイルになり、バッファに読み込まれます。
カーソルは、バッファの一行目に置かれます。
他のファイルを表示するには ":next" コマンドを使ってください。
ファイル名がダッシュで始まるファイルを開く場合は、
filelist の前に "\-\-" を指定してください。
.TP
\-
ファイルは標準入力から読み込まれます。コマンドは標準エラー (ttyからの入
力になっているはず) から読み込まれます。
.TP
\-t {tag}
開くファイルとカーソルの初期位置は "tag" に依存します。goto label の一種です。
tags ファイルから {tag} が検索され、関連したファイルがカレントファイルになり
ます。そして、関連したコマンドが実行されます。
これは主に C 言語のファイルを開くときに使われます。その場合 {tag} に関数など
を指定して使います。
関数を含んでいるファイルが開かれ、その関数の先頭にカーソルが移動する、
という動作になります。
詳しくは ":help tag\-commands" を参照してください。
.TP
\-q [errorfile]
クイックフィックスモードで起動します。
[errorfile] に指定したファイルが読み込まれ、最初のエラーが表示されます。
[errorfile] を省略した場合は、オプション 'errorfile' が使われます (初期設定
は、Amiga では "AztecC.Err"、その他のシステムでは "errors.err" です)。
":cn" コマンドで次のエラーにジャンプできます。
詳しくは ":help quickfix" を参照してください。
.PP
.B Vim
は、起動されたときの実行ファイルの名前によって動作を変えます
(実行ファイルの実体が同じであっても)。
.TP 10
vim
"普通" に起動します。標準の状態です。
.TP
ex
Ex モードで起動します。
ノーマルモードに切り替えるには ":vi" コマンドを使ってください。
引数に "\-e" を指定した場合と同じです。
.TP
view
読み込み専用モードで起動します。ファイルの保存が制限されます。
引数に "\-R" を指定した場合と同じです。
.TP
gvim gview
GUI バージョン。
新しいウィンドウを開いて起動します。
引数に "\-g" を指定した場合と同じです。
.TP
evim eview
簡易モードの GUI バージョン。
新しいウィンドウを開いて起動します。
引数に "\-y" を指定した場合と同じです。
.TP
rvim rview rgvim rgview
上記と同じですが、制限モードで起動します。シェルコマンドを実行したり、
.B Vim
をサスペンドしたりできなくなります。
引数に "\-Z" を指定した場合と同じです。
.SH オプション
ファイル名の前でも後ろでも、好きな順番でオプションを指定できます。
パラメータを必要としない引数は、一つのダッシュにまとめて指定できます。
.TP 12
+[num]
一番目のファイルの "num" 行目にカーソルを移動します。
"num" を省略した場合は、一行目にカーソルが移動します。
.TP
+/{pat}
一番目のファイルの、最初に {pat} が見つかった行にカーソルが移動します。
検索パターンについては ":help search\-pattern" を参照してください。
.TP
+{command}
.TP
\-c {command}
一番目のファイルが読み込まれた後に {command} が実行されます。
{command} は Ex コマンドとして解釈されます。
{command} に空白を含める場合は、ダブルクォートで囲んでください (シェルに依存)。
例: vim "+set si" main.c
.br
Note: "+" と "\-c" は合わせて 10 個まで指定できます。
.TP
\-S {file}
一番目のファイルが読み込まれた後に {file} が実行されます。
これは \-c "source {file}" と同じ動作です。
{file} の先頭が '\-' の場合は使えません。
{file} が省略された場合は、"Session.vim" が使われます (ただし \-S が最後の引
数だった場合のみ)。
.TP
\-\-cmd {command}
"\-c" と同じですが、vimrc を処理する前にコマンドが実行されます。
これらのコマンドは "\-c" コマンドとは別に、10 個まで指定できます。
.TP
\-A
アラビア語がサポートされていて、アラビア語キーマップがある場合は、
アラビア語モードで起動します ('arabic' がオンになります)。
右横書きのファイルを編集できます。
サポートされていない場合はエラーメッセージを表示して終了します。
.TP
\-b
バイナリモード。
バイナリファイルを編集ためのオプションがいくつか設定されます。
.TP
\-C
互換モード。'compatible' オプションがオンになります。
 .vimrc ファイルの有無に関わらず、
.B Vim
の動作が Vi 互換になります。
.TP
\-d
差分モードで起動します。
二つか三つの四つのファイルを引数に指定してください。
指定されたファイルが開かれ、それらのファイルの差分が表示されます。
vimdiff(1) と同様の動作です。
.TP
\-d {device}
{device} を端末として開きます。
Amiga でのみ使います。
例:
"\-d con:20/30/600/150".
.TP
\-D
デバッグ。スクリプトの最初のコマンドが実行されるところからデバッグモードを開
始します。
.TP
\-e
Ex モードで起動します。
実行ファイルの名前が "ex" の場合と同じです。
.TP
\-E
改良版 Ex モードで起動します。
実行ファイルの名前が "exim" の場合と同じです。
.TP
\-f
フォアグラウンド。GUI バージョンで、プロセスをフォークしなくなります。
Amiga の場合は、新しいウィンドウで再起動しなくなります。
メールソフトなどから
.B Vim
を起動して、編集が終わるまで待機したいような場合に使ってください。
Amiga では、":sh" と "!" コマンドは機能しなくなります。
.TP
\-\-nofork
フォアグラウンド。GUI バージョンで、プロセスをフォークしなくなります。
.TP
\-F
ペルシア語がサポートされていて、ペルシア語キーマップがある場合は、
ペルシア語モードで起動します ('fkmap' と 'rightleft' がオンになります)。
右横書きのファイルを編集できます。
サポートされていない場合はエラーメッセージを表示して終了します。
.TP
\-g
GUI がサポートされている場合は、GUI で起動します。
サポートされていない場合はエラーメッセージを表示して終了します。
.TP
\-h
コマンドライン引数やオプションのヘルプを表示して終了します。
.TP
\-H
ヘブライ語がサポートされていて、ヘブライ語キーマップがある場合は、
ヘブライ語モードで起動します ('hkmap' と 'rightleft' がオンになります)。
右横書きのファイルを編集できます。
サポートされていない場合はエラーメッセージを表示して終了します。
.TP
\-i {viminfo}
viminfo ファイルを使う設定になっている場合は、初期設定の "~/.viminfo" の代わ
りに、指定されたファイルを設定します。
"NONE" を指定すると、.viminfo ファイルを使わないように設定できます。
.TP
\-L
\-r と同じです。
.TP
\-l
lisp モード。
オプションの 'lisp' と 'showmatch' がオンになります。
.TP
\-m
ファイルの変更を不可能にします。
オプション 'write' がオフになります。
バッファを変更することはできますが、ファイルを保存することはできません。
.TP
\-M
変更を不可能にします。オプションの 'modifiable' と 'write' がオフになり、
ファイルの変更と保存ができなくなります。
Note: それらのオプションを設定すれば変更できるようになります。
.TP
\-N
非互換モード。'compatible' オプションがオフになります。
 .vimrc ファイルの有無に関わらず、
.B Vim
の改良された機能が有効になります。Vi との互換性が少し失われます。
.TP
\-n
スワップファイルを使用しません。
クラッシュしてもリカバリできなくなります。
フロッピーディスクのような非常に低速なメディアのファイルを読み書きするときに
便利です。
":set uc=0" と設定しても同じです。
戻すには ":set uc=200" と設定してください。
.TP
\-nb
NetBeans と接続し、エディタサーバーになります。
詳しくはヘルプを参照してください。
.TP
\-o[N]
N 個のウィンドウを水平分割で開きます。
N を省略した場合は、引数のファイルを個別のウィンドウで開きます。
.TP
\-O[N]
N 個のウィンドウを垂直分割で開きます。
N を省略した場合は、引数のファイルを個別のウィンドウで開きます。
.TP
\-p[N]
N 個のタブページを開きます。
N を省略した場合は、引数のファイルを個別のタブページで開きます。
.TP
\-R
読み込み専用モード。
オプション 'readonly' がオンになります。
バッファを変更することはできますが、間違ってファイルを上書きしてしまうのを防
ぐことができます。
ファイルを保存したい場合は、":w!" のように、Ex コマンドに感嘆符を付けてくだ
さい。
\-R オプションは \-n オプションの効果も含んでいます (下記参照)。
オプション 'readonly' は ":set noro" でオフにできます。
詳しくは ":help 'readonly'" を参照してください。
.TP
\-r
スワップファイルの一覧を表示します。リカバリに関する情報も表示されます。
.TP
\-r {file}
リカバリモード。
スワップファイルを使って、クラッシュした編集セッションを復活させます。
スワップファイルは、ファイル名に ".swp" を加えた名前のファイルです。
詳しくは ":help recovery" を参照してください。
.TP
\-s
サイレントモード。"ex" という名前で起動するか、"\-e" オプションの後で
"\-s" オプションが指定された場合のみ。
.TP
\-s {scriptin}
{scriptin} をスクリプトファイルとして読み込まれます。
ファイル中の文字列は、手で入力したときと同じように処理されます。
これは ":source! {scriptin}" と同じ動作です。
エディタが終了する前にファイルの終わりまで読み込んだ場合、
それ以降はキーボードから入力を読み込みます。
.TP
\-T {terminal}
端末の名前を指定します。
端末が自動的に認識されない場合に使ってください。
Vim が組み込みでサポートしている名前か、
termcap または terminfo ファイルで定義されている名前を指定してください。
.TP
\-u {vimrc}
{vimrc} ファイルを使って初期化します。
他の初期化処理はスキップされます。
特殊なファイルを編集する場合などに使ってください。
すべての初期化をスキップするには "NONE" を指定してください。
詳しくは ":help initialization" を参照してください。
.TP
\-U {gvimrc}
{gvimrc} ファイルを使って GUI を初期化します。
他の GUI の初期化はスキップされます。
すべての GUI の初期化をスキップするには "NONE" を指定してください。
詳しくは ":help gui\-init" を参照してください。
.TP
\-V[N]
冗長モード。スクリプトファイルを実行したり viminfo ファイルを読み書きするた
びにメッセージを表示します。N に指定した数値が 'verbose' に設定されます。
省略した場合は 10 になります。
.TP
\-v
Vi モードで起動します。
実行ファイルの名前が "vi" の場合と同じです。
実行ファイルの名前が "ex" の場合だけ効果があります。
.TP
\-w {scriptout}
入力した文字を {scriptout} に記録します。
"vim \-s" や "source!" で実行するためのスクリプトファイルを作成するのに便利
です。
{scriptout} ファイルがすでに存在した場合は追加保存されます。
.TP
\-W {scriptout}
\-w と同じですが、ファイルがすでに存在した場合は上書きされます。
.TP
\-x
ファイルを暗号化して書き込みます。暗号化キーの入力プロンプトが表示されます。
.TP
\-X
X サーバーと通信しません。端末での起動時間を短くできます。
しかし、ウィンドウタイトルの変更やクリップボードは使えなくなります。
.TP
\-y
簡易モードで起動します。
実行ファイルの名前が "evim" や "eview" の場合と同じです。
.B Vim
の動作がモードレスエディタ (click-and-type editor) のようになります。
.TP
\-Z
制限モード。
実行ファイルの名前が "r" で始まっている場合と同じです。
.TP
\-\-
オプション指定の末尾を示す記号です。
これ以降の引数はすべてファイル名として扱われます。
ファイル名が '\-' で始まっているファイルを開くときに使ってください。
.TP
\-\-echo\-wid
GTK GUI のみ: Window ID を標準出力に出力します。
.TP
\-\-help
ヘルプを表示して終了します。"\-h" と同じです。
.TP
\-\-literal
引数のファイル名をリテラル文字列として扱います。ワイルドカードを展開しませ
ん。Unix のように、シェルがワイルドカードを展開する場合は機能しません。
.TP
\-\-noplugin
プラグインをロードしません。\-u NONE はこの動作を含んでいます。
.TP
\-\-remote
Vim サーバーと通信し、引数に指定されたファイルを Vim サーバーで開きます。
サーバーが存在しない場合は、エラーメッセージを表示され、起動中の Vim でファ
イルが開かれます。
.TP
\-\-remote\-expr {expr}
Vim サーバーと通信し、{expr} に与えられた式を Vim サーバーで実行し、結果を標
準出力に出力します。
.TP
\-\-remote\-send {keys}
Vim サーバーと通信し、{keys} に与えられたキーを Vim サーバーに送信します。
.TP
\-\-remote\-silent
\-\-remote と同じですが、サーバーが存在しなくてもエラーメッセージを表示しま
せん。
.TP
\-\-remote\-wait
\-\-remote と同じですが、ファイルが開かれるのを確認できるまで待機します。
.TP
\-\-remote\-wait\-silent
\-\-remote\-wait と同じですが、サーバーが存在しなくてもエラーメッセージを表
示しません。
.TP
\-\-serverlist
Vim サーバーの一覧を表示します。
.TP
\-\-servername {name}
サーバーの名前を {name} に設定します。\-\-remote 引数を指定しなかった場合
は、起動中の Vim の名前として使われるので、後からその名前を使ってサーバー通
信できます。
.TP
\-\-socketid {id}
GTK GUI のみ: GtkPlug メカニズムを使って gvim を別のウィンドウの中で実行しま
す。
.TP
\-\-version
バージョン情報を表示して終了します。
.SH オンラインヘルプ
ヘルプを開くには、
.B Vim
の中で ":help" と入力してください。
":help 調べたい項目" と入力すれば、指定した項目のヘルプが表示されます。
例: "ZZ" コマンドのヘルプを表示するには ":help ZZ" と入力します。
<Tab> や CTRL\-D を使って補完することもできます
(":help cmdline\-completion" 参照)。
ヘルプには、項目から項目へジャンプできるようにタグが埋め込まれています
(ハイパーリンクのようなものです。":help" 参照)。
すべてのヘルプファイルはこの方法で開くことができます。
例: ":help syntax.txt"。
.SH ファイル
.TP 15
/usr/local/lib/vim/doc/*.txt
.B Vim
のヘルプファイル。
ファイルの一覧は ":help doc\-file\-list" に記載されています。
.TP
/usr/local/lib/vim/doc/tags
ヘルプを検索するための tags ファイル。
.TP
/usr/local/lib/vim/syntax/syntax.vim
システムの構文定義初期化ファイル。
.TP
/usr/local/lib/vim/syntax/*.vim
いろいろな言語用の構文定義ファイル。
.TP
/usr/local/lib/vim/vimrc
システムの
.B Vim
初期化ファイル。
.TP
~/.vimrc
ユーザーの
.B Vim
初期化ファイル。
.TP
/usr/local/lib/vim/gvimrc
システムの gvim 初期化ファイル。
.TP
~/.gvimrc
ユーザーの gvim 初期化ファイル。
.TP
/usr/local/lib/vim/optwin.vim
":options" コマンドで使われるファイル。オプションを表示したり設定したりでき
ます。
.TP
/usr/local/lib/vim/menu.vim
システムのメニュー初期化ファイル。gvim で使います。
.TP
/usr/local/lib/vim/bugreport.vim
バグレポートを生成するスクリプト。":help bugs" 参照。
.TP
/usr/local/lib/vim/filetype.vim
ファイル名からファイルタイプを判定するスクリプト。":help 'filetype'" 参照。
.TP
/usr/local/lib/vim/scripts.vim
ファイルの内容からファイルタイプを判定するスクリプト。":help 'filetype'" 参照。
.TP
/usr/local/lib/vim/print/*.ps
PostScript 印刷に使われるファイル。
.PP
最新の情報は VIM のホームページを参照してください:
.br
<URL:http://www.vim.org/>
.SH 関連項目
vimtutor(1)
.SH 著者
.B Vim
のほとんどの機能は Bram Moolenaar が開発し、多くの人が協力しました。
":help credits" を参照してください。
.br
.B Vim
は Stevie を基にしています。Stevie は Tim Thompson、Tony Andrews、
G.R. (Fred) Walter によって開発されました。
ただし、オリジナルのコードはもうほとんど残っていません。
.SH バグ
既知のバグは ":help todo" に記載されています。
.PP
Vi の動作を忠実に再現した結果、多くの人がバグだと思うような機能もいくつかあ
ります。
"この動作は Vi と違う" からバグだと思った場合は、vi_diff.txtを確認してみてく
ださい (ファイルを開くか、Vim から ":help vi_diff.txt" と入力)。
オプションの 'compatible' と 'cpoptions' も確認してください。
