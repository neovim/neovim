#!/usr/bin/env bash

if [ "$1" == "--help" ]; then
  echo "$(basename $0) <optional list of tests in form file:func>"
  echo "e.g.: "
  echo " - run all tests: $0"
  echo " - run specific tests script: $0 signature_help.test.vim"
  echo " - run specific tests fun: $0 signature_help.test.vim:Test_signatures_TopLine\(\)"
  exit 0
fi

RUN_VIM="vim --clean --not-a-term"
RUN_TEST="${RUN_VIM} -S lib/run_test.vim"

NODE_VERSION_MAJ=$(node --version \
                  | awk 'BEGIN { FS="." } { print substr( $1, 2 ) }')
if [ ${NODE_VERSION_MAJ} -gt "10" ]; then
  echo "ERROR: Tests must be run against node 10 or earlier because python." >&2
  echo "You have $(node --version)" >&2
  exit 1
fi

if [ -z "$VIMSPECTOR_MIMODE" ]; then
  if which lldb >/dev/null 2>&1; then
    export VIMSPECTOR_MIMODE=lldb
  elif which gdb >/dev/null 2>&1; then
    export VIMSPECTOR_MIMODE=gdb
  else
    echo "Couldn't guess VIMSPECTOR_MIMODE. Need lldb or gdb in path"
    exit 1
  fi
fi

echo "Testing with VIMSPECTOR_MIMODE=$VIMSPECTOR_MIMODE"

echo "%SETUP - Building test programs..."
set -e
  pushd tests/testdata/cpp/simple
    make clean simple
  popd
set +e
echo "%DONE - built test programs"

# Start
pushd $(dirname $0)/tests > /dev/null
echo "Running Vimspector Vim tests"

RESULT=0

TESTS="$@"

if [ -z "$TESTS" ]; then
  TESTS=*.test.vim
fi

for t in ${TESTS}; do
  echo ""
  echo "%RUN: $t"

  # split on : into fileName and testName
  IFS=: read -s t T <<< "$t"

  TESTLOGDIR=$(pwd)/logs/$t

  if ${RUN_TEST} --cmd 'au SwapExists * let v:swapchoice = "e"' $t $T \
     && [ -f $t.res ];  then
    echo "%PASS: $t PASSED"
  else
    echo "%FAIL: $t FAILED - see $TESTLOGDIR"
    RESULT=1
  fi

  rm -rf $TESTLOGDIR
  mkdir -p $TESTLOGDIR
  ${RUN_VIM} --version > ${TESTLOGDIR}/vimversion
  for l in messages debuglog test.log *.testlog; do
    # In CI we can't view the output files, so we just have to cat them
    if [ -f $l ]; then
      if [ "$VIMSPECTOR_TEST_STDOUT" ]; then
        echo ""
        echo ""
        echo "*** START: $l ***"
        cat $l
        echo "*** END: $l ***"
      fi
      mv $l $TESTLOGDIR
    fi
  done

  rm -f $t.res
done

echo "Done running tests"
popd > /dev/null

echo ""
echo "All done."


exit $RESULT
