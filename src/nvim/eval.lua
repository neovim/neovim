-- File containing table with all functions.
--
-- Keys:
--
-- args  Number of arguments, list with maximum and minimum number of arguments
--       or list with a minimum number of arguments only. Defaults to zero
--       arguments.
-- base  For methods: the argument to use as the base argument (1-indexed):
--       base->method()
--       Defaults to BASE_NONE (function cannot be used as a method).
-- func  Name of the C function which implements the VimL function. Defaults to
--       `f_{funcname}`.
-- fast  Function can run in |api-fast| events. Defaults to false.

local varargs = function(nr)
  return {nr}
end

-- Usable with the base key: use the last function argument as the method base.
-- Value is from funcs.h file. "BASE_" prefix is omitted.
-- local LAST = "BASE_LAST" (currently unused after port of v8.2.1168)

return {
  funcs={
    abs={args=1, base=1, argnames={'expr'}},
    acos={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&acos"},  -- WJMc
    add={args=2, base=1, argnames={'object','item'}},
    ['and']={args=2, base=1, argnames={'expr','expr'}},
    api_info={},
    append={args=2, base=2, argnames={'lnum','text'}},
    appendbufline={args=3, base=3, argnames={'expr','lnum','text'}},
    argc={args={0, 1}, argnames={'winid'}},
    argidx={},
    arglistid={args={0, 2}, argnames={'winnr','tabnr'}},
    argv={args={0, 2}, argnames={'nr','winid'}},
    asin={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&asin"},  -- WJMc
    assert_beeps={args=1, base=1, argnames={'cmd'}},
    assert_equal={args={2, 3}, base=2, argnames={'exp','act','msg'}},
    assert_equalfile={args={2, 3}, base=1, argnames={'fname-one','fname-two','msg'}},
    assert_exception={args={1, 2}, argnames={'error','msg'}},
    assert_fails={args={1, 3}, base=1, argnames={'cmd','error'}},
    assert_false={args={1, 2}, base=1, argnames={'actual','msg'}},
    assert_inrange={args={3, 4}, base=3, argnames={'lower','upper','actual','msg'}},
    assert_match={args={2, 3}, base=2, argnames={'pat','text','msg'}},
    assert_nobeep={args=1, base=1, argnames={'cmd'}},
    assert_notequal={args={2, 3}, base=2, argnames={'exp','act','msg'}},
    assert_notmatch={args={2, 3}, base=2, argnames={'pat','text','msg'}},
    assert_report={args=1, base=1, argnames={'msg'}},
    assert_true={args={1, 2}, base=1, argnames={'actual','msg'}},
    atan={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&atan"},
    atan2={args=2, base=1, argnames={'expr1','expr2'}},
    browse={args=4, argnames={'save','title','initdir','default'}},
    browsedir={args=2, argnames={'title','initdir'}},
    bufadd={args=1, base=1, argnames={'name'}},
    bufexists={args=1, base=1, argnames={'expr'}},
    buffer_exists={args=1, base=1, func='f_bufexists'},  -- obsolete
    buffer_name={args={0, 1}, base=1, func='f_bufname'},  -- obsolete
    buffer_number={args={0, 1}, base=1, func='f_bufnr'},  -- obsolete
    buflisted={args=1, base=1, argnames={'expr'}},
    bufload={args=1, base=1, argnames={'expr'}},
    bufloaded={args=1, base=1, argnames={'expr'}},
    bufname={args={0, 1}, base=1, argnames={'expr'}},
    bufnr={args={0, 2}, base=1, argnames={'expr','create'}},
    bufwinid={args=1, base=1, argnames={'expr'}},
    bufwinnr={args=1, base=1, argnames={'expr'}},
    byte2line={args=1, base=1, argnames={'byte'}},
    byteidx={args=2, base=1, argnames={'expr','nr'}},
    byteidxcomp={args=2, base=1, argnames={'expr','nr'}},
    call={args={2, 3}, base=1, argnames={'func','arglist','dict'}},
    ceil={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&ceil"},
    changenr={},
    chanclose={args={1, 2}, argnames={'id','stream'}},
    chansend={args=2, argnames={'id','data'}},
    char2nr={args={1, 2}, base=1, argnames={'expr','utf8'}},
    charcol={args=1, base=1, argnames={'expr'}},
    charidx={args={2, 3}, base=1, argnames={'string','idx','countcc'}},
    chdir={args=1, base=1, argnames={'dir'}},
    cindent={args=1, base=1, argnames={'lnum'}},
    clearmatches={args={0, 1}, base=1, argnames={'win'}},
    col={args=1, base=1, argnames={'expr'}},
    complete={args=2, base=2, argnames={'startcol','matches'}},
    complete_add={args=1, base=1, argnames={'expr'}},
    complete_check={},
    complete_info={args={0, 1}, base=1, argnames={'what'}},
    confirm={args={1, 4}, base=1, argnames={'msg','choices','default','type'}},
    copy={args=1, base=1, argnames={'expr'}},
    cos={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&cos"},
    cosh={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&cosh"},
    count={args={2, 4}, base=1, argnames={'comp','expr','ic','start'}},
    cscope_connection={args={0, 3}, argnames={'num','dbpath','prepend'}},
    ctxget={args={0, 1}, argnames={'index'}},
    ctxpop={},
    ctxpush={args={0, 1}, argnames={'types'}},
    ctxset={args={1, 2}, argnames={'context','index'}},
    ctxsize={},
    cursor={args={1, 3}, base=1, argnames={{'lnum','col','off'},{'list'}}},
    debugbreak={args={1, 1}, base=1, argnames={'pid'}},
    deepcopy={args={1, 2}, base=1, argnames={'expr','noref'}},
    delete={args={1,2}, base=1, argnames={'fname','flags'}},
    deletebufline={args={2,3}, base=1, argnames={'buf','first','last'}},
    dictwatcheradd={args=3, argnames={'dict','pattern','callback'}},
    dictwatcherdel={args=3, argnames={'dict','pattern','callback'}},
    did_filetype={},
    diff_filler={args=1, base=1, argnames={'lnum'}},
    diff_hlID={args=2, base=1, argnames={'lnum','col'}},
    digraph_get={args=1, base=1, argnames={'chars'}},
    digraph_getlist={args={0, 1}, base=1, argnames={'listall'}},
    digraph_set={args=2, base=1, argnames={'chars','digraph'}},
    digraph_setlist={args=1, base=1, argnames={'digraphlist'}},
    empty={args=1, base=1, argnames={'expr'}},
    environ={},
    escape={args=2, base=1, argnames={'string','chars'}},
    eval={args=1, base=1, argnames={'string'}},
    eventhandler={},
    executable={args=1, base=1, argnames={'expr'}},
    execute={args={1, 2}, base=1, argnames={'command'}},
    exepath={args=1, base=1, argnames={'expr'}},
    exists={args=1, base=1, argnames={'expr'}},
    exp={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&exp"},
    expand={args={1, 3}, base=1, argnames={'expr','nosuf','list'}},
    expandcmd={args=1, base=1, argnames={'expr'}},
    extend={args={2, 3}, base=1, argnames={'expr1','expr2','expr3'}},
    feedkeys={args={1, 2}, base=1, argnames={'string','mode'}},
    file_readable={args=1, base=1, func='f_filereadable'},  -- obsolete
    filereadable={args=1, base=1, argnames={'file'}},
    filewritable={args=1, base=1, argnames={'file'}},
    filter={args=2, base=1, argnames={'expr1','expr2'}},
    finddir={args={1, 3}, base=1, argnames={'name','path','count'}},
    findfile={args={1, 3}, base=1, argnames={'name','path','count'}},
    flatten={args={1, 2}, base=1, argnames={'list','maxdepth'}},
    float2nr={args=1, base=1, argnames={'expr'}},
    floor={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&floor"},
    fmod={args=2, base=1, argnames={'expr1','expr2'}},
    fnameescape={args=1, base=1, argnames={'fname'}},
    fnamemodify={args=2, base=1, argnames={'fname','mods'}},
    foldclosed={args=1, base=1, argnames={'lnum'}},
    foldclosedend={args=1, base=1, argnames={'lnum'}},
    foldlevel={args=1, base=1, argnames={'lnum'}},
    foldtext={},
    foldtextresult={args=1, base=1, argnames={'lnum'}},
    foreground={},
    fullcommand={args=1, base=1, argnames={'name'}},
    funcref={args={1, 3}, base=1, argnames={'name','arglist','dict'}},
    ['function']={args={1, 3}, base=1, argnames={'name','arglist','dict'}},
    garbagecollect={args={0, 1}, argnames={'atexit'}},
    get={args={2, 3}, base=1, argnames={{'list','idx','def'},{'dict','key','def'},{'func','what'}}},
    getbufinfo={args={0, 1}, base=1, argnames={'buf'}},
    getbufline={args={2, 3}, base=1, argnames={'buf','lnum','end'}},
    getbufvar={args={2, 3}, base=1, argnames={'buf','varname','def'}},
    getchangelist={args={0, 1}, base=1, argnames={'buf'}},
    getchar={args={0, 1}, argnames={'expr'}},
    getcharmod={},
    getcharpos={args=1, base=1, argnames={'expr'}},
    getcharsearch={},
    getcharstr={args={0, 1}, argnames={'expr'}},
    getcmdcompltype={},
    getcmdline={},
    getcmdpos={},
    getcmdscreenpos={},
    getcmdtype={},
    getcmdwintype={},
    getcompletion={args={2, 3}, base=1, argnames={'pat','type','filtered'}},
    getcurpos={args={0, 1}, base=1, argnames={'winnr'}},
    getcursorcharpos={args={0, 1}, base=1, argnames={'winnr'}},
    getcwd={args={0, 2}, base=1, argnames={'winnr','tabnr'}},
    getenv={args=1, base=1, argnames={'name'}},
    getfontname={args={0, 1}, argnames={'name'}},
    getfperm={args=1, base=1, argnames={'fname'}},
    getfsize={args=1, base=1, argnames={'fname'}},
    getftime={args=1, base=1, argnames={'fname'}},
    getftype={args=1, base=1, argnames={'fname'}},
    getjumplist={args={0, 2}, base=1, argnames={'winnr','tabnr'}},
    getline={args={1, 2}, base=1, argnames={'lnum','end'}},
    getloclist={args={1, 2}, argnames={'nr','what'}},
    getmarklist={args={0, 1}, base=1, argnames={'buf'}},
    getmatches={args={0, 1}, argnames={'win'}},
    getmousepos={},
    getpid={},
    getpos={args=1, base=1, argnames={'expr'}},
    getqflist={args={0, 1}, argnames={'what'}},
    getreg={args={0, 3}, base=1, argnames={'regname','1','list'}},
    getreginfo={args={0, 1}, base=1, argnames={'regname'}},
    getregtype={args={0, 1}, base=1, argnames={'regname'}},
    gettabinfo={args={0, 1}, base=1, argnames={'expr'}},
    gettabvar={args={2, 3}, base=1, argnames={'nr','varname','def'}},
    gettabwinvar={args={3, 4}, base=1, argnames={'tabnr','winnr','name','def'}},
    gettagstack={args={0, 1}, base=1, argnames={'nr'}},
    getwininfo={args={0, 1}, base=1, argnames={'winid'}},
    getwinpos={args={0, 1}, base=1, argnames={'timeout'}},
    getwinposx={},
    getwinposy={},
    getwinvar={args={2, 3}, base=1, argnames={'nr','varname','def'}},
    glob={args={1, 4}, base=1, argnames={'expr','nosuf','list','alllinks'}},
    glob2regpat={args=1, base=1, argnames={'expr'}},
    globpath={args={2, 5}, base=2, argnames={'path','expr','nosuf','list','alllinks'}},
    has={args=1, argnames={'feature'}},
    has_key={args=2, base=1, argnames={'dict','key'}},
    haslocaldir={args={0, 2}, base=1, argnames={'winnr','tabnr'}},
    hasmapto={args={1, 3}, base=1, argnames={'what','mode','abbr'}},
    highlightID={args=1, base=1, func='f_hlID'},  -- obsolete
    highlight_exists={args=1, base=1, func='f_hlexists'},  -- obsolete
    histadd={args=2, base=2, argnames={'history','item'}},
    histdel={args={1, 2}, base=1, argnames={'history','item'}},
    histget={args={1, 2}, base=1, argnames={'history','index'}},
    histnr={args=1, base=1, argnames={'history'}},
    hlID={args=1, base=1, argnames={'name'}},
    hlexists={args=1, base=1, argnames={'name'}},
    hostname={},
    iconv={args=3, base=1, argnames={'expr','from','to'}, fast=true},
    indent={args=1, base=1, argnames={'lnum'}},
    index={args={2, 4}, base=1, argnames={'object','expr','start','ic'}},
    input={args={1, 3}, base=1, argnames={'prompt','text','completion'}},
    inputdialog={args={1, 3}, base=1},
    inputlist={args=1, base=1, argnames={'textlist'}},
    inputrestore={},
    inputsave={},
    inputsecret={args={1, 2}, base=1, argnames={'prompt','text'}},
    insert={args={2, 3}, base=1, argnames={'object','item','idx'}},
    interrupt={args=0},
    invert={args=1, base=1, argnames={'expr'}},
    isdirectory={args=1, base=1, argnames={'directory'}},
    isinf={args=1, base=1, argnames={'expr'}},
    islocked={args=1, base=1, argnames={'expr'}},
    isnan={args=1, base=1, argnames={'expr'}},
    id={args=1, argnames={'expr'}},
    items={args=1, base=1, argnames={'dict'}},
    jobclose={args={1, 2}, func="f_chanclose"},
    jobpid={args=1, argnames={'id'}},
    jobresize={args=3, argnames={'id','width','height'}},
    jobsend={args=2, func="f_chansend"},
    jobstart={args={1, 2}, argnames={'cmd','opts'}},
    jobstop={args=1, argnames={'id'}},
    jobwait={args={1, 2}, argnames={'ids','timeout'}},
    join={args={1, 2}, base=1, argnames={'list','sep'}},
    json_decode={args=1, base=1, argnames={'expr'}},
    json_encode={args=1, base=1, argnames={'expr'}},
    keys={args=1, base=1, argnames={'dict'}},
    last_buffer_nr={},  -- obsolete
    len={args=1, base=1, argnames={'expr'}},
    libcall={args=3, base=3, argnames={'lib','func','arg'}},
    libcallnr={args=3, base=3, argnames={'lib','func','arg'}},
    line={args={1, 2}, base=1, argnames={'expr','winid'}},
    line2byte={args=1, base=1, argnames={'lnum'}},
    lispindent={args=1, base=1, argnames={'lnum'}},
    list2str={args={1, 2}, base=1, argnames={'list','utf8'}},
    localtime={},
    log={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&log"},
    log10={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&log10"},
    luaeval={args={1, 2}, base=1, argnames={'expr','expr'}},
    map={args=2, base=1, argnames={'expr1','expr2'}},
    maparg={args={1, 4}, base=1, argnames={'name','mode','abbr','dict'}},
    mapcheck={args={1, 3}, base=1, argnames={'name','mode','abbr'}},
    mapset={args=3, base=1, argnames={'mode','abbr','dict'}},
    match={args={2, 4}, base=1, argnames={'expr','pat','start','count'}},
    matchadd={args={2, 5}, base=1, argnames={'group','pattern','priority','id','dict'}},
    matchaddpos={args={2, 5}, base=1, argnames={'group','pos','priority','id','dict'}},
    matcharg={args=1, base=1, argnames={'nr'}},
    matchdelete={args={1, 2}, base=1, argnames={'id','win'}},
    matchend={args={2, 4}, base=1, argnames={'expr','pat','start','count'}},
    matchfuzzy={args={2, 3}, base=1, argnames={'list','str','dict'}},
    matchfuzzypos={args={2, 3}, base=1, argnames={'list','str','dict'}},
    matchlist={args={2, 4}, base=1, argnames={'expr','pat','start','count'}},
    matchstr={args={2, 4}, base=1, argnames={'expr','pat','start','count'}},
    matchstrpos={args={2,4}, base=1, argnames={'expr','pat','start','count'}},
    max={args=1, base=1, argnames={'expr'}},
    menu_get={args={1, 2}, argnames={'path','modes'}},
    menu_info={args={1, 2}, base=1},
    min={args=1, base=1, argnames={'expr'}},
    mkdir={args={1, 3}, base=1, argnames={'name','path','prot'}},
    mode={args={0, 1}, base=1, argnames={'expr'}},
    msgpackdump={args={1, 2}, argnames={'list','type'}},
    msgpackparse={args=1, argnames={'data'}},
    nextnonblank={args=1, base=1, argnames={'lnum'}},
    nr2char={args={1, 2}, base=1, argnames={'expr','utf8'}},
    ['or']={args=2, base=1, argnames={'expr','expr'}},
    pathshorten={args={1, 2}, base=1, argnames={'expr','len'}},
    pow={args=2, base=1, argnames={'x','y'}},
    prevnonblank={args=1, base=1, argnames={'lnum'}},
    printf={args=varargs(1), base=2, argnames={'fmt','expr1'}},
    prompt_getprompt={args=1, base=1, argnames={'buf'}},
    prompt_setcallback={args={2, 2}, base=1, argnames={'buf','expr'}},
    prompt_setinterrupt={args={2, 2}, base=1, argnames={'buf','text'}},
    prompt_setprompt={args={2, 2}, base=1, argnames={'buf','text'}},
    pum_getpos={},
    pumvisible={},
    py3eval={args=1, base=1, argnames={'expr'}},
    pyeval={args=1, base=1, argnames={'expr'}, func="f_py3eval"},
    pyxeval={args=1, base=1, argnames={'expr'}, func="f_py3eval"},
    perleval={args=1, base=1, argnames={'expr'}},
    rand={args={0, 1}, base=1, argnames={'expr'}},
    range={args={1, 3}, base=1, argnames={'expr','max','stride'}},
    readdir={args={1, 2}, base=1, argnames={'dir','expr'}},
    readfile={args={1, 3}, base=1, argnames={'fname','type','max'}},
    reduce={args={2, 3}, base=1, argnames={'object','func','initial'}},
    reg_executing={},
    reg_recording={},
    reg_recorded={},
    reltime={args={0, 2}, base=1, argnames={'start','end'}},
    reltimefloat={args=1, base=1, argnames={'time'}},
    reltimestr={args=1, base=1, argnames={'time'}},
    remove={args={2, 3}, base=1, argnames={{'list','idx','end'},{'blob','idx','end'},{'dict','key'}}},
    rename={args=2, base=1, argnames={'from','to'}},
    ['repeat']={args=2, base=1, argnames={'expr','count'}},
    resolve={args=1, base=1, argnames={'filename'}},
    reverse={args=1, base=1, argnames={'list'}},
    round={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&round"},
    rpcnotify={args=varargs(2), argnames={'channel','event','args'}},
    rpcrequest={args=varargs(2), argnames={'channel','method','args'}},
    rpcstart={args={1, 2}},
    rpcstop={args=1},
    rubyeval={args=1, base=1, argnames={'expr'}},
    screenattr={args=2, base=1, argnames={'row','col'}},
    screenchar={args=2, base=1, argnames={'row','col'}},
    screenchars={args=2, base=1, argnames={'row','col'}},
    screencol={},
    screenpos={args=3, base=1, argnames={'winid','lnum','col'}},
    screenrow={},
    screenstring={args=2, base=1, argnames={'row','col'}},
    search={args={1, 5}, base=1, argnames={'pattern','flags','stopline','timeout','skip'}},
    searchcount={args={0, 1}, base=1, argnames={'options'}},
    searchdecl={args={1, 3}, base=1, argnames={'name','global','thisblock'}},
    searchpair={args={3, 7}, argnames={'start','middle','end','flags','skip'}},
    searchpairpos={args={3, 7}, argnames={'start','middle','end','flags','skip'}},
    searchpos={args={1, 5}, base=1, argnames={'pattern','flags','stopline','timeout','skip'}},
    serverlist={},
    serverstart={args={0, 1}},
    serverstop={args=1},
    setbufline={args=3, base=3, argnames={'expr','lnum','text'}},
    setbufvar={args=3, base=3, argnames={'buf','varname','val'}},
    setcharpos={args=2, base=2, argnames={'expr','list'}},
    setcharsearch={args=1, base=1, argnames={'dict'}},
    setcmdpos={args=1, base=1, argnames={'pos'}},
    setcursorcharpos={args={1, 3}, base=1, argnames={'list'}},
    setenv={args=2, base=2, argnames={'name','val'}},
    setfperm={args=2, base=1, argnames={'fname','mode'}},
    setline={args=2, base=2, argnames={'lnum','line'}},
    setloclist={args={2, 4}, base=2, argnames={'nr','list','action','what'}},
    setmatches={args={1, 2}, base=1, argnames={'list','win'}},
    setpos={args=2, base=2, argnames={'expr','list'}},
    setqflist={args={1, 3}, base=1, argnames={'list','action','what'}},
    setreg={args={2, 3}, base=2, argnames={'n','v','opt'}},
    settabvar={args=3, base=3, argnames={'nr','varname','val'}},
    settabwinvar={args=4, base=4, argnames={'tabnr','winnr','varname','val'}},
    settagstack={args={2, 3}, base=2, argnames={'nr','dict','action'}},
    setwinvar={args=3, base=3, argnames={'nr','varname','val'}},
    sha256={args=1, base=1, argnames={'string'}},
    shellescape={args={1, 2}, base=1, argnames={'string','special'}},
    shiftwidth={args={0, 1}, base=1, argnames={'col'}},
    sign_define={args={1, 2}, base=1, argnames={{'name','dict'},{'list'}}},
    sign_getdefined={args={0, 1}, base=1, argnames={'name'}},
    sign_getplaced={args={0, 2}, base=1, argnames={'buf','dict'}},
    sign_jump={args=3, base=1, argnames={'id','group','buf'}},
    sign_place={args={4, 5}, base=1, argnames={'id','group','name','buf','dict'}},
    sign_placelist={args=1, base=1, argnames={'list'}},
    sign_undefine={args={0, 1}, base=1, argnames={{'name'},{'list'}}},
    sign_unplace={args={1, 2}, base=1, argnames={'group','dict'}},
    sign_unplacelist={args=1, base=1, argnames={'list'}},
    simplify={args=1, base=1, argnames={'filename'}},
    sin={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&sin"},
    sinh={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&sinh"},
    sockconnect={args={2,3}, argnames={'mode','address','opts'}},
    sort={args={1, 3}, base=1, argnames={'list','func','dict'}},
    soundfold={args=1, base=1, argnames={'word'}},
    stdioopen={args=1, argnames={'dict'}},
    spellbadword={args={0, 1}, base=1, argnames={'sentence'}},
    spellsuggest={args={1, 3}, base=1, argnames={'word','max','capital'}},
    split={args={1, 3}, base=1, argnames={'expr','pat','keepempty'}},
    sqrt={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&sqrt"},
    srand={args={0, 1}, base=1, argnames={'expr'}},
    stdpath={args=1, argnames={'what'}},
    str2float={args=1, base=1, argnames={'expr','quoted'}},
    str2list={args={1, 2}, base=1, argnames={'expr','utf8'}},
    str2nr={args={1, 3}, base=1, argnames={'expr','base','quoted'}},
    strcharpart={args={2, 3}, base=1, argnames={'str','start','len'}},
    strchars={args={1, 2}, base=1, argnames={'expr','skipcc'}},
    strdisplaywidth={args={1, 2}, base=1, argnames={'expr','col'}},
    strftime={args={1, 2}, base=1, argnames={'format','time'}},
    strgetchar={args=2, base=1, argnames={'str','index'}},
    stridx={args={2, 3}, base=1, argnames={'haystack','needle','start'}},
    string={args=1, base=1, argnames={'expr'}},
    strlen={args=1, base=1, argnames={'expr'}},
    strpart={args={2, 4}, base=1, argnames={'str','start','len','chars'}},
    strptime={args=2, base=1, argnames={'format','timestring'}},
    strridx={args={2, 3}, base=1, argnames={'haystack','needle','start'}},
    strtrans={args=1, base=1, argnames={'expr'}},
    strwidth={args=1, base=1, argnames={'expr'}},
    submatch={args={1, 2}, base=1, argnames={'nr','list'}},
    substitute={args=4, base=1, argnames={'expr','pat','sub','flags'}},
    swapinfo={args=1, base=1, argnames={'fname'}},
    swapname={args=1, base=1, argnames={'buf'}},
    synID={args=3, argnames={'lnum','col','trans'}},
    synIDattr={args={2, 3}, base=1, argnames={'synID','what','mode'}},
    synIDtrans={args=1, base=1, argnames={'synID'}},
    synconcealed={args=2, argnames={'lnum','col'}},
    synstack={args=2, argnames={'lnum','col'}},
    system={args={1, 2}, base=1, argnames={'cmd','input'}},
    systemlist={args={1, 3}, base=1, argnames={'cmd','input'}},
    tabpagebuflist={args={0, 1}, base=1, argnames={'arg'}},
    tabpagenr={args={0, 1}, argnames={'arg'}},
    tabpagewinnr={args={1, 2}, base=1, argnames={'tabarg','arg'}},
    tagfiles={},
    taglist={args={1, 2}, base=1, argnames={'expr','filename'}},
    tan={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&tan"},
    tanh={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&tanh"},
    tempname={},
    termopen={args={1, 2}, argnames={'cmd','opts'}},
    test_garbagecollect_now={},
    test_write_list_log={args=1},
    timer_info={args={0, 1}, base=1, argnames={'id'}},
    timer_pause={args=2, base=1, argnames={'id','pause'}},
    timer_start={args={2, 3}, base=1, argnames={'time','callback','options'}},
    timer_stop={args=1, base=1, argnames={'timer'}},
    timer_stopall={args=0},
    tolower={args=1, base=1, argnames={'expr'}},
    toupper={args=1, base=1, argnames={'expr'}},
    tr={args=3, base=1, argnames={'src','fromstr','tostr'}},
    trim={args={1, 3}, base=1, argnames={'text','mask','dir'}},
    trunc={args=1, base=1, argnames={'expr'}, func="float_op_wrapper", data="&trunc"},
    type={args=1, base=1, argnames={'name'}},
    undofile={args=1, base=1, argnames={'name'}},
    undotree={},
    uniq={args={1, 3}, base=1, argnames={'list','func','dict'}},
    values={args=1, base=1, argnames={'dict'}},
    virtcol={args=1, base=1, argnames={'expr'}},
    visualmode={args={0, 1}, argnames={'expr'}},
    wait={args={2,3}, argnames={'timeout','condition','interval'}},
    wildmenumode={},
    win_execute={args={2, 3}, base=2, argnames={'id','command','silent'}},
    win_findbuf={args=1, base=1, argnames={'bufnr'}},
    win_getid={args={0, 2}, base=1, argnames={'win','tab'}},
    win_gettype={args={0, 1}, base=1, argnames={'nr'}},
    win_gotoid={args=1, base=1, argnames={'expr'}},
    win_id2tabwin={args=1, base=1, argnames={'expr'}},
    win_id2win={args=1, base=1, argnames={'expr'}},
    win_move_separator={args=2, base=1, argnames={'nr'}},
    win_move_statusline={args=2, base=1, argnames={'nr'}},
    win_screenpos={args=1, base=1, argnames={'nr'}},
    win_splitmove={args={2, 3}, base=1, argnames={'nr','target','options'}},
    winbufnr={args=1, base=1, argnames={'nr'}},
    wincol={},
    windowsversion={},
    winheight={args=1, base=1, argnames={'nr'}},
    winlayout={args={0, 1}, base=1, argnames={'tabnr'}},
    winline={},
    winnr={args={0, 1}, base=1, argnames={'expr'}},
    winrestcmd={},
    winrestview={args=1, base=1, argnames={'dict'}},
    winsaveview={},
    winwidth={args=1, base=1, argnames={'nr'}},
    wordcount={},
    writefile={args={2, 3}, base=1, argnames={'object','fname','flags'}},
    xor={args=2, base=1, argnames={'expr','expr'}},
  },
}
