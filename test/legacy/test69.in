Test for multi-byte text formatting.
Also test, that 'mps' with multibyte chars works.
And test "ra" on multi-byte characters.
Also test byteidx() and byteidxcomp()

STARTTEST
:so mbyte.vim
:set encoding=utf-8
ENDTEST

Results of test69:

STARTTEST
/^{/+1
:set tw=2 fo=t
gqgqjgqgqo
Ôº∏ÔºπÔº∫
abc Ôº∏ÔºπÔº∫
ENDTEST

{
Ôº∏ÔºπÔº∫
abc Ôº∏ÔºπÔº∫
}

STARTTEST
/^{/+1
:set tw=1 fo=tm
gqgqjgqgqjgqgqjgqgqjgqgqo
Ôº∏
Ôº∏a
Ôº∏ a
Ôº∏Ôºπ
Ôº∏ Ôºπ
ENDTEST

{
Ôº∏
Ôº∏a
Ôº∏ a
Ôº∏Ôºπ
Ôº∏ Ôºπ
}

STARTTEST
/^{/+1
:set tw=2 fo=tm
gqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqo
Ôº∏
Ôº∏a
Ôº∏ a
Ôº∏Ôºπ
Ôº∏ Ôºπ
aÔº∏
abÔº∏
abcÔº∏
abÔº∏ c
abÔº∏Ôºπ
ENDTEST

{
Ôº∏
Ôº∏a
Ôº∏ a
Ôº∏Ôºπ
Ôº∏ Ôºπ
aÔº∏
abÔº∏
abcÔº∏
abÔº∏ c
abÔº∏Ôºπ
}

STARTTEST
/^{/+1
:set ai tw=2 fo=tm
gqgqjgqgqo
Ôº∏
Ôº∏a
ENDTEST

{
  Ôº∏
  Ôº∏a
}

STARTTEST
/^{/+1
:set noai tw=2 fo=tm
gqgqjgqgqo
  Ôº∏
  Ôº∏a
ENDTEST

{
  Ôº∏
  Ôº∏a
}

STARTTEST
/^{/+1
:set tw=2 fo=cqm comments=n:Ôº∏
gqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqjgqgqo
Ôº∏
Ôº∏a
Ôº∏aÔºπ
Ôº∏Ôºπ
Ôº∏ÔºπÔº∫
Ôº∏ Ôºπ
Ôº∏ ÔºπÔº∫
Ôº∏Ôº∏
Ôº∏Ôº∏a
Ôº∏Ôº∏Ôºπ
ENDTEST

{
Ôº∏
Ôº∏a
Ôº∏aÔºπ
Ôº∏Ôºπ
Ôº∏ÔºπÔº∫
Ôº∏ Ôºπ
Ôº∏ ÔºπÔº∫
Ôº∏Ôº∏
Ôº∏Ôº∏a
Ôº∏Ôº∏Ôºπ
}

STARTTEST
/^{/+1
:set tw=2 fo=tm
RÔº∏a
ENDTEST

{

}

STARTTEST
/^{/+1
:set mps+=u2018:u2019
d%
ENDTEST

{
‚Äò two three ‚Äô four
}
STARTTEST
/^ra test
jVjra
ENDTEST

ra test
ÔΩÅbbÔΩÅ
ÔΩÅÔΩÅb

STARTTEST
:let a = '.√©.' " one char of two bytes
:let b = '.eÃÅ.' " normal e with composing char
/^byteidx
:put =string([byteidx(a, 0), byteidx(a, 1), byteidx(a, 2), byteidx(a, 3), byteidx(a, 4)])
:put =string([byteidx(b, 0), byteidx(b, 1), byteidx(b, 2), byteidx(b, 3), byteidx(b, 4)])
/^byteidxcomp
:put =string([byteidxcomp(a, 0), byteidxcomp(a, 1), byteidxcomp(a, 2), byteidxcomp(a, 3), byteidxcomp(a, 4)])
:let b = '.eÃÅ.'
:put =string([byteidxcomp(b, 0), byteidxcomp(b, 1), byteidxcomp(b, 2), byteidxcomp(b, 3), byteidxcomp(b, 4), byteidxcomp(b, 5)])
ENDTEST

byteidx
byteidxcomp

STARTTEST
:g/^STARTTEST/.,/^ENDTEST/d
:1;/^Results/,$wq! test.out
ENDTEST
