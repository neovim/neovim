name: test
on:
  push:
    branches:
      - 'master'
      - 'release-[0-9]+.[0-9]+'
  pull_request:
    branches:
      - 'master'
      - 'release-[0-9]+.[0-9]+'
    paths-ignore:
      - 'contrib/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  ASAN_OPTIONS: detect_leaks=1:check_initialization_order=1:log_path=${{ github.workspace }}/build/log/asan:intercept_tls_get_addr=0
  BIN_DIR: ${{ github.workspace }}/bin
  BUILD_DIR: ${{ github.workspace }}/build
  INSTALL_PREFIX: ${{ github.workspace }}/nvim-install
  LOG_DIR: ${{ github.workspace }}/build/log
  NVIM_LOG_FILE: ${{ github.workspace }}/build/.nvimlog
  TSAN_OPTIONS: log_path=${{ github.workspace }}/build/log/tsan
  UBSAN_OPTIONS: log_path=${{ github.workspace }}/build/log/ubsan
  VALGRIND_LOG: ${{ github.workspace }}/build/log/valgrind-%p.log
  # TEST_FILE: test/functional/core/startup_spec.lua
  # TEST_FILTER: foo

jobs:
  docker:
    if: false
    runs-on: ubuntu-latest
    timeout-minutes: 45
    name: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/arm64]
    steps:
      - uses: actions/checkout@v4

      - run: docker buildx install
      - run: docker buildx create --use --name=multiarch --node=multiarch
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run: docker buildx build --platform=${{ matrix.platform }} --build-arg="TAG=${{ github.ref }}" .github/workflows
