name: test
on:
  push:
    branches:
      - 'master'
      - 'release-[0-9]+.[0-9]+'
  pull_request:
    branches:
      - 'master'
      - 'release-[0-9]+.[0-9]+'
    paths-ignore:
      - 'contrib/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  ASAN_OPTIONS: detect_leaks=1:check_initialization_order=1:log_path=${{ github.workspace }}/build/log/asan:intercept_tls_get_addr=0
  BIN_DIR: ${{ github.workspace }}/bin
  BUILD_DIR: ${{ github.workspace }}/build
  INSTALL_PREFIX: ${{ github.workspace }}/nvim-install
  LOG_DIR: ${{ github.workspace }}/build/log
  NVIM_LOG_FILE: ${{ github.workspace }}/build/.nvimlog
  TSAN_OPTIONS: log_path=${{ github.workspace }}/build/log/tsan
  VALGRIND_LOG: ${{ github.workspace }}/build/log/valgrind-%p.log
  # TEST_FILE: test/functional/core/startup_spec.lua
  # TEST_FILTER: foo

jobs:
  lint_build:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: Build third-party deps
        run: |
          cmake -S cmake.deps -B .deps -G Ninja
          cmake --build .deps

      - run: |
          cmake -B build -G Ninja
          cmake --build build

      - run: tar -cvf lint.tar build .deps

      - uses: actions/upload-artifact@v4
        with:
          name: lint
          path: lint.tar
          retention-days: 1

  lint:
    name: ${{ matrix.build }}
    needs: lint_build
    strategy:
      fail-fast: false
      matrix:
        build: [lintlua-stylua, lintlua-luacheck, lintsh, lintc-clint, lintc-clang-tidy, lintc-uncrustify]
        # build: [lintlua-stylua, lintlua-luacheck, lintsh, lintc-clint, lintc-clang-tidy, lintc-uncrustify, clang-analyzer]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v4

      - if: ${{ matrix.build == 'lintlua-stylua' }}
        name: Install stylua
        run: |
          wget --directory-prefix="$BIN_DIR" https://github.com/JohnnyMorganz/StyLua/releases/latest/download/stylua-linux-x86_64.zip
          (cd "$BIN_DIR"; unzip stylua*.zip)

      - uses: actions/download-artifact@v4
        with:
          name: lint

      - run: tar -xvf lint.tar

      - name: ${{ matrix.build }}
        run: cmake --build build --target ${{ matrix.build }}
