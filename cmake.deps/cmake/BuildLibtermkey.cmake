if(WIN32)
  set(LIBTERMKEY_CONFIGURE_COMMAND ${CMAKE_COMMAND} -E copy
      ${CMAKE_CURRENT_SOURCE_DIR}/cmake/libtermkeyCMakeLists.txt
      ${DEPS_BUILD_DIR}/src/libtermkey/CMakeLists.txt
    COMMAND ${CMAKE_COMMAND} ${DEPS_BUILD_DIR}/src/libtermkey
      -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
      ${BUILD_TYPE_STRING}
      # Hack to avoid -rdynamic in Mingw
      -DCMAKE_SHARED_LIBRARY_LINK_C_FLAGS=""
      -DCMAKE_GENERATOR=${CMAKE_GENERATOR}
      -DCMAKE_GENERATOR_PLATFORM=${CMAKE_GENERATOR_PLATFORM}
      -DUNIBILIUM_INCLUDE_DIRS=${DEPS_INSTALL_DIR}/include
      -DUNIBILIUM_LIBRARIES=${DEPS_LIB_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}unibilium${CMAKE_STATIC_LIBRARY_SUFFIX})
  set(LIBTERMKEY_BUILD_COMMAND ${CMAKE_COMMAND} --build . --config $<CONFIG>)
  set(LIBTERMKEY_INSTALL_COMMAND ${CMAKE_COMMAND} --build . --target install --config $<CONFIG>)
else()
  find_package(PkgConfig REQUIRED)

  set(LIBTERMKEY_BUILD_COMMAND "" BUILD_IN_SOURCE 1)
  set(LIBTERMKEY_INSTALL_COMMAND ${MAKE_PRG} CC=${DEPS_C_COMPILER}
    PREFIX=${DEPS_INSTALL_DIR} PKG_CONFIG_PATH=${DEPS_LIB_DIR}/pkgconfig
    CFLAGS=-fPIC LDFLAGS+=-static ${DEFAULT_MAKE_CFLAGS} install)
endif()

if(USE_EXISTING_SRC_DIR)
  unset(LIBTERMKEY_URL)
endif()
ExternalProject_Add(libtermkey
  URL ${LIBTERMKEY_URL}
  URL_HASH SHA256=${LIBTERMKEY_SHA256}
  DOWNLOAD_NO_PROGRESS TRUE
  DOWNLOAD_DIR ${DEPS_DOWNLOAD_DIR}/libtermkey
  CONFIGURE_COMMAND "${LIBTERMKEY_CONFIGURE_COMMAND}"
  BUILD_COMMAND "${LIBTERMKEY_BUILD_COMMAND}"
  INSTALL_COMMAND "${LIBTERMKEY_INSTALL_COMMAND}")

list(APPEND THIRD_PARTY_DEPS libtermkey)
